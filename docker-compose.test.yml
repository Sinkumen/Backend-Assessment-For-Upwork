version: "3.6"
services:
  database:
    image: postgres:11
    command: postgres -c fsync=off -c synchronous_commit=off -c full_page_writes=off -c random_page_cost=1.0
    environment:
      - POSTGRES_USER=${TEST_PG_USER}
      - POSTGRES_PASSWORD=${TEST_PG_PASSWORD}
      - POSTGRES_DB=${TEST_PG_DATABASE}
    container_name: "postgres-test"
    ports:
      - "${TEST_PG_PORT}:${TEST_PG_PORT}"
    tmpfs: /var/lib/postgresql/data
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test:
        ["CMD-SHELL", "pg_isready -U ${TEST_PG_USER} -d ${TEST_PG_DATABASE}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    networks:
      - rateeat-net

  redis:
    image: redis:alpine
    container_name: "redis-test"
    ports:
      - "6380:6379"
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis-data:/data
    environment:
      - REDIS_OVERRUN_MEMORY=1
    networks:
      - rateeat-net

  rateeat_backend:
    build:
      context: .
      dockerfile: Dockerfile.test
    env_file:
      - .env
    container_name: "rateeat-backend-test"
    environment:
      - NODE_ENV=test
      - POSTGRES_HOST=database
      - POSTGRES_PORT=${TEST_PG_PORT}
      - POSTGRES_USER=${TEST_PG_USER}
      - POSTGRES_PASSWORD=${TEST_PG_PASSWORD}
      - POSTGRES_DB=${TEST_PG_DATABASE}
      - REDIS_HOST=redis
      - REDIS_PORT=6380
    depends_on:
      - database
      - redis
    ports:
      - "8000:8000"
    networks:
      - rateeat-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

networks:
  rateeat-net:
    driver: bridge
volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
